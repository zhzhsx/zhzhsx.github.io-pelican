<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>zhzhsx's Blog</title><link href="http://zhzhsx.github.io/" rel="alternate"></link><link href="http://zhzhsx.github.io/feeds/all.atom.xml" rel="self"></link><id>http://zhzhsx.github.io/</id><updated>2013-12-02T11:00:00+08:00</updated><entry><title>把Windows安装到移动硬盘上</title><link href="http://zhzhsx.github.io/posts/install-windows-to-portable-drive" rel="alternate"></link><updated>2013-12-02T11:00:00+08:00</updated><author><name>zhzhsx</name></author><id>tag:zhzhsx.github.io,2013-12-02:posts/install-windows-to-portable-drive</id><summary type="html">&lt;p&gt;Windows 8及之后的系统支持Windows To Go，通过该功能可以将Windows安装到移动硬盘上。但是，Windows To Go会格式化整个移动硬盘，&lt;/p&gt;
</summary></entry><entry><title>某研究生找工作经历</title><link href="http://zhzhsx.github.io/posts/find-jobs-as-graduate" rel="alternate"></link><updated>2013-11-30T22:30:00+08:00</updated><author><name>zhzhsx</name></author><id>tag:zhzhsx.github.io,2013-11-30:posts/find-jobs-as-graduate</id><summary type="html">&lt;p&gt;找工作季节基本上结束了。为了以后不忘记这段经历，有了这个记录。（先得说明，这篇文章只是记录加上自己的一些思考，没有笔试和面试题目的解法，如果想了解后者，找本面试宝典看也许更好。）&lt;/p&gt;
&lt;h3 id="本科找工作的失败经历"&gt;本科找工作的失败经历&lt;/h3&gt;
&lt;p&gt;我本科毕业时曾找过工作，当时投了百度，腾讯，淘宝和网易游戏，虽然最后都遭淘汰，但这段经历给我不少启发。对于网易游戏，我简历筛选没通过，后来才知道，它的offer不是那么好拿的。对于百度，笔试没过，想来是缺乏笔试经验，很多本来会的题做错了。腾讯笔试和百度的冲突，放弃了，出乎意料的是不知谁内推我，我有了面试机会，但我没把握住机会，一面问了两道题之后，就结束了。淘宝到了二面，但自我介绍没说好，导致面试氛围不好，最终被淘汰了。我认为这些失败的根本原因是准备不足，包括简历的准备，笔试基础知识的准备，面试中可能出现的问题的应对准备。&lt;/p&gt;
&lt;h3 id="研究生找工作过程"&gt;研究生找工作过程&lt;/h3&gt;
&lt;p&gt;由于以前的失败经历，我想做足准备，但最后还是只准备了一个月，而且这一个月都花在写简历上了，基本知识没怎么复习。&lt;/p&gt;
&lt;p&gt;我参加的第一场笔试是阿里巴巴的。可能是因为笔试准备不足，这一场笔试就遭淘汰。我自认为能力还是不错的，怎么也不应该这么早失败，于是我有了霸面的想法。在阿里巴巴面试阶段最后一天的早上，我去了他们的面试现场。那里的工作人员说，可以交一份简历，但能不能得到面试的机会，得看最终面试官有没有时间。经过一段纠结后，我交了自己的简历，然后走了。霸面这事一般不靠谱，然而在当天下午我收到了面试的通知，带着复杂的心情，我以最快速度赶到了面试现场。之后就是颇有效率的三轮面试，每轮面试基本上一小时，加上等待时间，总共也就四小时吧。第一轮&lt;/p&gt;
&lt;p&gt;但这段时间只写了简历，感觉时间估计不足。先说今年的收获。今年拿到了5个offer，分别是杭州阿里小微金服的研发，广州网易游戏的QA，北京微策略的软件开发，北京小米的服务器开发，北京VMware的软件开发。&lt;/p&gt;
&lt;h3 id="广告"&gt;广告&lt;/h3&gt;
</summary></entry><entry><title>博客诞生记</title><link href="http://zhzhsx.github.io/posts/birth-of-the-blog" rel="alternate"></link><updated>2013-04-21T00:00:00+08:00</updated><author><name>zhzhsx</name></author><id>tag:zhzhsx.github.io,2013-04-21:posts/birth-of-the-blog</id><summary type="html">&lt;p&gt;&lt;em&gt;已经转到Pelican上了&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;建立静态博客有多种方案，本博客试过Octopress和Jekyll，前者代码和博客内容混在一起，后者缺乏官方文档。JekyllBootstrap是Jekyll的一些起步文件，项目似乎已经停止维护，其作者在创建一个新的静态博客生成工具ruhoh。本着折腾的精神，本博客试用这个还在alpha阶段的软件。&lt;/p&gt;
&lt;p&gt;ruhoh有一些优点，例如可以自动生成summary。但也存在很多问题，如rackup可能崩溃，可以将Gemfile.lock中directory_watch都改为1.4.1解决问题。&lt;/p&gt;
&lt;h3 id="显示数学公式"&gt;显示数学公式&lt;/h3&gt;
&lt;p&gt;MathML虽然方便，但不好看。MathJax好看，但加载速度慢。&lt;/p&gt;
&lt;h3 id="其他"&gt;其他&lt;/h3&gt;
&lt;p&gt;pandoc的fenced code支持高亮!但好像和ruhoh的高亮冲突。&lt;/p&gt;
&lt;pre class="sourceCode java" id="samplecode"&gt;&lt;code class="sourceCode java"&gt;&lt;span class="kw"&gt;class&lt;/span&gt; Hello {
    &lt;span class="kw"&gt;public&lt;/span&gt; &lt;span class="dt"&gt;static&lt;/span&gt; &lt;span class="dt"&gt;void&lt;/span&gt; &lt;span class="fu"&gt;main&lt;/span&gt;(String[] args) {
        &lt;span class="dt"&gt;int&lt;/span&gt; i = &lt;span class="dv"&gt;0&lt;/span&gt;;
    }
}&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="测试"&gt;测试&lt;/h3&gt;
&lt;p&gt;测试博客的排版。&lt;/p&gt;
&lt;p&gt;数学公式测试。根据&lt;a href="http://drz.ac/2013/01/03/blogging-with-math/"&gt;这篇博客&lt;/a&gt;，pandoc可以正确处理下面几个公式，而其他markdown解析器无法正确解析。 &lt;span class="math"&gt;\[y = [z &amp;gt; 0]\]&lt;/span&gt; &lt;span class="math"&gt;\[\int_{-\infty}^\infty f(x) \mathrm{d} x,\]&lt;/span&gt; &lt;span class="math"&gt;\[\int_{-\infty}^\infty g(t) \mathrm{d} t,\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;缩进式代码&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;int main() {
    printf(&amp;quot;hello, world!\n&amp;quot;);
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;定义&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;苹果&lt;/dt&gt;
&lt;dd&gt;苹果是一种水果。
&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;脚注&lt;sup&gt;&lt;a href="#fn1" class="footnoteRef" id="fnref1"&gt;1&lt;/a&gt;&lt;/sup&gt;测试。&lt;/p&gt;
&lt;p&gt;脚注后一段。&lt;/p&gt;
&lt;section class="footnotes"&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id="fn1"&gt;&lt;p&gt;这是脚注内容&lt;a href="#fnref1"&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</summary></entry><entry><title>测试页面</title><link href="http://zhzhsx.github.io/posts/test-page" rel="alternate"></link><updated>2013-04-10T12:00:00+08:00</updated><author><name>zhzhsx</name></author><id>tag:zhzhsx.github.io,2013-04-10:posts/test-page</id><summary type="html">&lt;p&gt;测试博客的排版。&lt;/p&gt;
&lt;p&gt;数学公式测试。根据&lt;a href="http://drz.ac/2013/01/03/blogging-with-math/"&gt;这篇博客&lt;/a&gt;，pandoc可以正确处理下面几个公式，而其他markdown解析器无法正确解析。 &lt;span class="math"&gt;\[y = [z &amp;gt; 0]\]&lt;/span&gt; &lt;span class="math"&gt;\[\int_{-\infty}^\infty f(x) \mathrm{d} x,\]&lt;/span&gt; &lt;span class="math"&gt;\[\int_{-\infty}^\infty g(t) \mathrm{d} t,\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;代码&lt;code&gt;int a;&lt;/code&gt; 缩进式代码&lt;/p&gt;
&lt;pre class="sourceCode c"&gt;&lt;code class="sourceCode c"&gt;&lt;span class="dt"&gt;int&lt;/span&gt; main() {
    printf(&lt;span class="st"&gt;&amp;quot;hello, world!&lt;/span&gt;&lt;span class="ch"&gt;\n&lt;/span&gt;&lt;span class="st"&gt;&amp;quot;&lt;/span&gt;);
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;带样式代码&lt;/p&gt;
&lt;pre class="sourceCode java"&gt;&lt;code class="sourceCode java"&gt;&lt;span class="kw"&gt;class&lt;/span&gt; Main {
    &lt;span class="kw"&gt;public&lt;/span&gt; &lt;span class="dt"&gt;static&lt;/span&gt; &lt;span class="dt"&gt;void&lt;/span&gt; &lt;span class="fu"&gt;main&lt;/span&gt;(String[] args) {
    }
}&lt;/code&gt;&lt;/pre&gt;
&lt;dl&gt;
&lt;dt&gt;苹果&lt;/dt&gt;
&lt;dd&gt;苹果是一种水果。
&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;脚注&lt;sup&gt;&lt;a href="#fn1" class="footnoteRef" id="fnref1"&gt;1&lt;/a&gt;&lt;/sup&gt;测试。&lt;/p&gt;
&lt;p&gt;脚注后一段。&lt;/p&gt;
&lt;section class="footnotes"&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id="fn1"&gt;&lt;p&gt;这是脚注内容&lt;a href="#fnref1"&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</summary><category term="tag1"></category><category term="tag2"></category></entry><entry><title>在Github Pages上用Octopress建立博客</title><link href="http://zhzhsx.github.io/posts/setup-blog-using-octopress-and-github-pages" rel="alternate"></link><updated>2013-01-25T00:00:00+08:00</updated><author><name>zhzhsx</name></author><id>tag:zhzhsx.github.io,2013-01-25:posts/setup-blog-using-octopress-and-github-pages</id><summary type="html">&lt;p&gt;&lt;strong&gt;已经不用Octopress了，此文信息可能陈旧&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;用Wordpress建立个人博客需要PHP+MySQL环境，用Octopress只需要静态页面的托管，我们可以方便的找到这样的服务，例如Github Pages。&lt;/p&gt;
&lt;p&gt;建立此博客时所在的系统环境是Windows/Cygwin。&lt;/p&gt;
&lt;h3 id="注册github账号"&gt;注册Github账号&lt;/h3&gt;
&lt;p&gt;Github Pages是个托管博客的好地方。注册Github账号不是什么复杂的过程。注册后设置自己的SSH Key，可以方便下面的操作。&lt;/p&gt;
&lt;h3 id="octopress的安装"&gt;Octopress的安装&lt;/h3&gt;
&lt;p&gt;Octopress需要Git和Ruby，Cygwin都提供这些软件。Octopress对Ruby的版本有要求，写此文章时，Cygwin正好提供合适的版本1.9.3。&lt;/p&gt;
&lt;p&gt;执行下面的命令&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone git://github.com/imathis/octopress.git octopress
cd octopress
# 安装依赖，下面的命令可能出错，见下文
gem install bundler
bundle install
# 安装默认的Octopress主题
rake install&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;执行&lt;code&gt;bundle install&lt;/code&gt;时，posix-spawn包可能出错，可以通过手工安装的方式绕过错误。在另一目录执行下面的命令，然后重新执行&lt;code&gt;bundle install&lt;/code&gt;。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pushd ~
gem install rake-compiler -v 0.7.6
git clone git://github.com/rtomayko/posix-spawn.git
cd posix-spawn
rake gem
gem install pkg/posix-spawn-0.3.6
popd&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="部署到github-pages上"&gt;部署到Github Pages上&lt;/h3&gt;
&lt;p&gt;在Github上创建一个库，名字为&lt;code&gt;username.github.io&lt;/code&gt;，其中&lt;code&gt;username&lt;/code&gt;替换为用户名。这个库的SSH地址为&lt;code&gt;git@github.com:username/username.github.io.git&lt;/code&gt;，后面会用到。&lt;/p&gt;
&lt;p&gt;执行下面的命令，初始化&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;rake setup_github_pages&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;生成并发布博客&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;rake generate
rake deploy&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;此时，博客已经发布到&lt;code&gt;http://username.github.io&lt;/code&gt;，但需要过几分钟，才能看到页面，此时是一个空的博客。&lt;/p&gt;
&lt;p&gt;将博客的源代码也放到库中，这样换个电脑后能方便地开始写博客。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git add .
git commit -m &amp;#39;your message&amp;#39;
git push origin source&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="配置octopress"&gt;配置Octopress&lt;/h3&gt;
&lt;p&gt;打开&lt;code&gt;_config.yml&lt;/code&gt;，改变其中的&lt;code&gt;title&lt;/code&gt;，&lt;code&gt;subtitle&lt;/code&gt;和&lt;code&gt;author&lt;/code&gt;。更多的配置可以参考官网文档。&lt;/p&gt;
&lt;h3 id="基本的操作"&gt;基本的操作&lt;/h3&gt;
&lt;p&gt;写文章&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;rake new_post[&amp;quot;title&amp;quot;]&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;可以做的操作&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;rake generate   # Generates posts and pages into the public directory
rake watch      # Watches source/ and sass/ for changes and regenerates
rake preview    # Watches, and mounts a webserver at http://localhost:4000&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;部署&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git add .
git commit -m &amp;quot;article：Github page + Octopress&amp;quot;
git push
rake deploy&lt;/code&gt;&lt;/pre&gt;
</summary></entry></feed>